#!/bin/bash

# Test script to verify QuoteForm and database schema alignment
# This script tests that the form submission works correctly

echo "üß™ Testing QuoteForm and Database Schema Alignment"
echo "================================================="

# Check if the application is running
echo "üîç Checking if application is running on port 3000..."
if ! curl -s http://localhost:3000 > /dev/null; then
    echo "‚ùå Application is not running on port 3000"
    echo "   Please run 'npm run dev' first"
    exit 1
fi

echo "‚úÖ Application is running"

# Test 1: Check if QuoteForm is accessible on homepage
echo ""
echo "üìù Test 1: Checking QuoteForm on homepage..."
HOMEPAGE_CONTENT=$(curl -s http://localhost:3000)
if echo "$HOMEPAGE_CONTENT" | grep -q "Get Your Free Life Insurance Quote"; then
    echo "‚úÖ QuoteForm found on homepage"
else
    echo "‚ùå QuoteForm not found on homepage"
fi

# Test 2: Check if QuoteForm is accessible on quote page
echo ""
echo "üìù Test 2: Checking QuoteForm on quote page..."
QUOTE_PAGE_CONTENT=$(curl -s http://localhost:3000/quote)
if echo "$QUOTE_PAGE_CONTENT" | grep -q "Get Your Free Life Insurance Quote"; then
    echo "‚úÖ QuoteForm found on quote page"
else
    echo "‚ùå QuoteForm not found on quote page"
fi

# Test 3: Check if all required form fields are present
echo ""
echo "üìù Test 3: Checking required form fields..."
REQUIRED_FIELDS=("firstName" "lastName" "email" "phone" "dateOfBirth" "healthConditions" "medications" "coverageType")
ALL_FIELDS_PRESENT=true

for field in "${REQUIRED_FIELDS[@]}"; do
    if echo "$QUOTE_PAGE_CONTENT" | grep -q "v-model=\"form\.$field\""; then
        echo "‚úÖ Field '$field' found"
    else
        echo "‚ùå Field '$field' missing"
        ALL_FIELDS_PRESENT=false
    fi
done

if [ "$ALL_FIELDS_PRESENT" = true ]; then
    echo "‚úÖ All required fields are present"
else
    echo "‚ùå Some required fields are missing"
fi

# Test 4: Test API endpoint with sample data
echo ""
echo "üìù Test 4: Testing API endpoint with sample data..."

# Create test payload
TEST_PAYLOAD='{
    "firstName": "Test",
    "lastName": "User",
    "email": "test@example.com",
    "phone": "555-0000",
    "dateOfBirth": "1990-01-01",
    "healthConditions": "None",
    "medications": "None", 
    "coverageType": "Term Life Insurance",
    "message": "API test submission"
}'

# Test the API endpoint
API_RESPONSE=$(curl -s -X POST http://localhost:3000/api/quote \
    -H "Content-Type: application/json" \
    -d "$TEST_PAYLOAD" \
    -w "%{http_code}")

HTTP_CODE="${API_RESPONSE: -3}"
RESPONSE_BODY="${API_RESPONSE%???}"

if [ "$HTTP_CODE" = "200" ]; then
    echo "‚úÖ API endpoint responded successfully (HTTP 200)"
    if echo "$RESPONSE_BODY" | grep -q "success.*true"; then
        echo "‚úÖ API returned success response"
    else
        echo "‚ö†Ô∏è  API responded but may have validation issues"
        echo "   Response: $RESPONSE_BODY"
    fi
else
    echo "‚ùå API endpoint failed (HTTP $HTTP_CODE)"
    echo "   Response: $RESPONSE_BODY"
fi

echo ""
echo "üìä Test Summary:"
echo "=================="
echo "‚úÖ Application running: Yes"
echo "‚úÖ QuoteForm on homepage: $(echo "$HOMEPAGE_CONTENT" | grep -q "Get Your Free Life Insurance Quote" && echo "Yes" || echo "No")"
echo "‚úÖ QuoteForm on quote page: $(echo "$QUOTE_PAGE_CONTENT" | grep -q "Get Your Free Life Insurance Quote" && echo "Yes" || echo "No")"
echo "‚úÖ All form fields present: $([[ "$ALL_FIELDS_PRESENT" = true ]] && echo "Yes" || echo "No")"
echo "‚úÖ API endpoint working: $([[ "$HTTP_CODE" = "200" ]] && echo "Yes" || echo "No")"

echo ""
echo "üéØ Next Steps:"
echo "‚Ä¢ Both pages now use the same comprehensive QuoteForm"
echo "‚Ä¢ Database schema matches QuoteForm fields exactly"
echo "‚Ä¢ API properly maps form data to database fields"
echo "‚Ä¢ Test the form manually at http://localhost:3000 and http://localhost:3000/quote"
echo ""

if [[ "$HTTP_CODE" = "200" ]] && [[ "$ALL_FIELDS_PRESENT" = true ]]; then
    echo "üéâ All tests passed! Form and schema are properly aligned."
else
    echo "‚ö†Ô∏è  Some tests failed. Please review the issues above."
fi