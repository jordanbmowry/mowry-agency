name: Documentation Maintenance

on:
  push:
    branches:
      - main
    paths:
      - 'app/**/*.vue'
      - 'app/**/*.ts'
      - 'server/**/*.ts'
      - 'app/composables/**/*.ts'
      - 'nuxt.config.ts'
      - 'package.json'

  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of documentation update'
        required: false
        default: 'full-review'
        type: choice
        options:
          - full-review
          - quick-update
          - architecture-update

  schedule:
    - cron: '0 10 * * 1'

jobs:
  check-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        if: github.event_name == 'push'
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
          files: |
            app/**/*.vue
            app/**/*.ts
            server/**/*.ts
            app/composables/**/*.ts
            nuxt.config.ts
            package.json

      - name: Analyze changes
        if: github.event_name == 'push' && steps.changed-files.outputs.any_changed == 'true'
        id: analyze
        run: |
          echo "Changed files:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

          NEEDS_COPILOT_UPDATE=false
          NEEDS_README_UPDATE=false
          NEEDS_PERF_UPDATE=false

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *"composables"* ]] || [[ $file == *"nuxt.config.ts"* ]]; then
              NEEDS_COPILOT_UPDATE=true
            fi
            if [[ $file == *"package.json"* ]]; then
              NEEDS_README_UPDATE=true
            fi
            if [[ $file == *"performance"* ]] || [[ $file == *"optimize"* ]]; then
              NEEDS_PERF_UPDATE=true
            fi
          done

          echo "needs_copilot_update=$NEEDS_COPILOT_UPDATE" >> $GITHUB_OUTPUT
          echo "needs_readme_update=$NEEDS_README_UPDATE" >> $GITHUB_OUTPUT
          echo "needs_perf_update=$NEEDS_PERF_UPDATE" >> $GITHUB_OUTPUT

      - name: Create documentation review issue
        if: github.event_name == 'push' && steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        env:
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
          NEEDS_COPILOT: ${{ steps.analyze.outputs.needs_copilot_update }}
          NEEDS_README: ${{ steps.analyze.outputs.needs_readme_update }}
          NEEDS_PERF: ${{ steps.analyze.outputs.needs_perf_update }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const changedFiles = process.env.CHANGED_FILES.split(' ').filter(Boolean);
            const needsCopilot = process.env.NEEDS_COPILOT === 'true';
            const needsReadme = process.env.NEEDS_README === 'true';
            const needsPerf = process.env.NEEDS_PERF === 'true';

            const filesList = changedFiles.map(f => '- `' + f + '`').join('\n');
            const copilotText = needsCopilot ? 'Update `.github/copilot-instructions.md`' : 'No copilot-instructions updates needed';
            const readmeText = needsReadme ? 'Update `README.md`' : 'No README updates needed';
            const perfText = needsPerf ? 'Update `PERFORMANCE_OPTIMIZATION_REPORT.md`' : 'No performance doc updates needed';

            const issueBody = [
              '## üìö Documentation Review Required',
              '',
              'The following files changed:',
              '',
              filesList,
              '',
              '### Recommended Updates:',
              '- ' + copilotText,
              '- ' + readmeText,
              '- ' + perfText,
              '',
              '### How to Update:',
              'Use `@workspace` in GitHub Copilot Chat:',
              '```',
              '@workspace Acting as the docs-writer-agent, review these changes and update documentation.',
              '```',
              '',
              'See `.github/agents/HOW-TO-USE-DOCS-WRITER.md` for details.'
            ].join('\n');

            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'documentation'
            });

            const hasDocIssue = existingIssues.data.some(issue => issue.title.startsWith('üìö Documentation Review:'));

            if (!hasDocIssue) {
              const dateOptions = { year: 'numeric', month: 'short', day: 'numeric' };
              const todayStr = new Date().toLocaleDateString('en-US', dateOptions);
              
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'üìö Documentation Review: ' + todayStr,
                body: issueBody,
                labels: ['documentation', 'needs-review']
              });
              
              console.log('Created documentation review issue');
            }

      - name: Add commit comment
        if: github.event_name == 'push' && steps.changed-files.outputs.any_changed == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: 'üìö Documentation reminder: Check if docs need updating. See documentation review issue.'
            });

  validate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check required files
        run: |
          echo "Checking required documentation files..."

          MISSING=()

          [ ! -f "README.md" ] && MISSING+=("README.md")
          [ ! -f ".github/copilot-instructions.md" ] && MISSING+=(".github/copilot-instructions.md")
          [ ! -f ".github/agents/DOCS-WRITER-AGENT.md" ] && MISSING+=(".github/agents/DOCS-WRITER-AGENT.md")

          if [ ${#MISSING[@]} -gt 0 ]; then
            echo "‚ùå Missing files:"
            printf '%s\n' "${MISSING[@]}"
            exit 1
          fi

          echo "‚úÖ All required documentation files present"

      - name: Validate markdown
        uses: DavidAnson/markdownlint-cli2-action@v14
        with:
          globs: |
            **/*.md
            !node_modules
            !dist
            !.nuxt
        continue-on-error: true

      - name: Summary
        if: always()
        run: echo "üìù Documentation validation complete"
