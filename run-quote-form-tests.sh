#!/bin/bash

# Comprehensive test runner for QuoteForm
# This script runs all types of tests: unit, integration, and validates the setup

echo "üß™ Running Comprehensive QuoteForm Tests"
echo "========================================"

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Not in the correct directory. Please run this from the project root."
    exit 1
fi

echo "üìã Test Plan:"
echo "‚Ä¢ Unit Tests: QuoteForm component logic and validation"
echo "‚Ä¢ Integration Tests: API endpoints and data flow"
echo "‚Ä¢ Manual E2E validation: Form consistency between pages"
echo ""

# Run unit tests
echo "üî¨ Running Unit Tests..."
echo "========================"
npm run test -- test/components/QuoteForm.test.ts

if [ $? -ne 0 ]; then
    echo "‚ùå Unit tests failed"
    exit 1
fi

echo "‚úÖ Unit tests passed!"
echo ""

# Run integration tests
echo "üîó Running Integration Tests..."
echo "==============================="
npm run test -- test/integration/quote-form.test.ts

if [ $? -ne 0 ]; then
    echo "‚ùå Integration tests failed"
    exit 1
fi

echo "‚úÖ Integration tests passed!"
echo ""

# Manual validation checks
echo "üìù Manual Validation Checks..."
echo "=============================="

# Check if application is running
echo "üîç Checking if application is running on port 3000..."
if curl -s http://localhost:3000 > /dev/null; then
    echo "‚úÖ Application is running"
    
    echo ""
    echo "üåê Testing Form Consistency..."
    
    # Check homepage
    HOMEPAGE_CONTENT=$(curl -s http://localhost:3000)
    if echo "$HOMEPAGE_CONTENT" | grep -q "Get Your Free Life Insurance Quote"; then
        echo "‚úÖ QuoteForm found on homepage"
    else
        echo "‚ùå QuoteForm not found on homepage"
    fi
    
    # Check quote page  
    QUOTE_PAGE_CONTENT=$(curl -s http://localhost:3000/quote)
    if echo "$QUOTE_PAGE_CONTENT" | grep -q "Get Your Free Life Insurance Quote"; then
        echo "‚úÖ QuoteForm found on quote page"
    else
        echo "‚ùå QuoteForm not found on quote page"
    fi
    
    # Check required fields are present on both pages
    echo ""
    echo "üîç Checking required fields..."
    REQUIRED_FIELDS=("firstName" "lastName" "email" "phone" "dateOfBirth" "healthConditions" "medications" "coverageType")
    ALL_FIELDS_PRESENT=true
    
    for field in "${REQUIRED_FIELDS[@]}"; do
        if echo "$HOMEPAGE_CONTENT" | grep -q "id=\"$field\"" && echo "$QUOTE_PAGE_CONTENT" | grep -q "id=\"$field\""; then
            echo "‚úÖ Field '$field' found on both pages"
        else
            echo "‚ùå Field '$field' missing on one or both pages"
            ALL_FIELDS_PRESENT=false
        fi
    done
    
    if [ "$ALL_FIELDS_PRESENT" = true ]; then
        echo "‚úÖ All required fields are present on both pages"
    else
        echo "‚ùå Some required fields are missing"
    fi
    
else
    echo "‚ö†Ô∏è  Application is not running on port 3000"
    echo "   To test form consistency manually, run 'npm run dev' first"
fi

echo ""
echo "üìä Test Summary"
echo "==============="
echo "‚úÖ Unit Tests: Passed"
echo "‚úÖ Integration Tests: Passed"
echo "‚úÖ Form Consistency: $([[ "$ALL_FIELDS_PRESENT" = true ]] && echo "Verified" || echo "Check manually")"

echo ""
echo "üéØ Test Coverage:"
echo "‚Ä¢ ‚úÖ Component rendering and structure"
echo "‚Ä¢ ‚úÖ Form validation (email, phone, age, required fields)"
echo "‚Ä¢ ‚úÖ Form state management and reactivity"
echo "‚Ä¢ ‚úÖ Form submission and API integration"
echo "‚Ä¢ ‚úÖ Error handling and user feedback"
echo "‚Ä¢ ‚úÖ Database schema alignment"
echo "‚Ä¢ ‚úÖ Form consistency between pages"

echo ""
echo "üìñ Manual Testing Guide:"
echo "========================"
echo "To complete the testing, manually verify:"
echo ""
echo "1. Visual Testing:"
echo "   ‚Ä¢ Visit http://localhost:3000 and http://localhost:3000/quote"
echo "   ‚Ä¢ Verify forms look identical"
echo "   ‚Ä¢ Test responsive design on mobile/tablet"
echo ""
echo "2. User Experience Testing:"
echo "   ‚Ä¢ Fill out the form with valid data"
echo "   ‚Ä¢ Test validation messages appear correctly"
echo "   ‚Ä¢ Verify success message after submission"
echo "   ‚Ä¢ Check form resets after successful submission"
echo ""
echo "3. Error Testing:"
echo "   ‚Ä¢ Test with invalid email format"
echo "   ‚Ä¢ Test with invalid phone number"
echo "   ‚Ä¢ Test with future birth date"
echo "   ‚Ä¢ Test with underage birth date"
echo ""
echo "4. Accessibility Testing:"
echo "   ‚Ä¢ Navigate form with keyboard only"
echo "   ‚Ä¢ Verify screen reader compatibility"
echo "   ‚Ä¢ Check color contrast and visual indicators"

echo ""
if [[ "$ALL_FIELDS_PRESENT" = true ]]; then
    echo "üéâ All automated tests passed! QuoteForm is ready for production."
else
    echo "‚ö†Ô∏è  Some issues detected. Please review and fix before deployment."
fi

echo ""
echo "üîß Development Commands:"
echo "‚Ä¢ npm run test:watch - Watch mode for unit tests"
echo "‚Ä¢ npm run test:coverage - Test coverage report"
echo "‚Ä¢ npm run test - Run all tests"